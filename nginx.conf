# Generated by nginxconfig.io
# See nginxconfig.txt for the configuration share link

user                 nginx;
pid                  /var/run/nginx.pid;
worker_processes     auto;
worker_rlimit_nofile 65535;

# Load modules
include              /etc/nginx/modules-enabled/*.conf;

events {
    multi_accept       on;
    worker_connections 65535;
}

http {
    charset                utf-8;
    sendfile               on;
    tcp_nopush             on;
    tcp_nodelay            on;
    server_tokens          off;
    types_hash_max_size    2048;
    types_hash_bucket_size 64;
    client_max_body_size   4M;

    # MIME
    include                mime.types;
    default_type           application/octet-stream;

    # Log Format
    log_format             cloudflare '$remote_addr - $remote_user [$time_local] "$request" "$upstream_cache_status" $status $body_bytes_sent $request_time $upstream_response_time "$http_referer" "$http_user_agent" $http_cf_ray $http_cf_connecting_ip';

    # Logging
    access_log             /var/log/nginx/access.log cloudflare; # dev
    # access_log             /var/log/nginx/access.log cloudflare buffer=512k flush=1m; # production
    error_log              /var/log/nginx/error.log warn;

    # Limits
    limit_req_log_level    warn;
    limit_req_zone         $binary_remote_addr zone=login:10m rate=10r/m;

    # SSL
    ssl_session_timeout    1d;
    ssl_session_cache      shared:SSL:10m;
    ssl_session_tickets    off;

    # Diffie-Hellman parameter for DHE ciphersuites
    ssl_dhparam            /etc/nginx/certs/dhparam.pem;

    # Mozilla Intermediate configuration
    ssl_protocols          TLSv1.2 TLSv1.3;
    ssl_ciphers            ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

    # OCSP Stapling
    ssl_stapling           on;
    ssl_stapling_verify    on;
    resolver               1.1.1.1 1.0.0.1 [2606:4700:4700::1111] [2606:4700:4700::1001] 8.8.8.8 8.8.4.4 [2001:4860:4860::8888] [2001:4860:4860::8844] 208.67.222.222 208.67.220.220 [2620:119:35::35] [2620:119:53::53] valid=60s;
    resolver_timeout       2s;

    # Connection header for WebSocket reverse proxy
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ""      close;
    }

    map $remote_addr $proxy_forwarded_elem {

        # IPv4 addresses can be sent as-is
        ~^[0-9.]+$        "for=$remote_addr";

        # IPv6 addresses need to be bracketed and quoted
        ~^[0-9A-Fa-f:.]+$ "for=\"[$remote_addr]\"";

        # Unix domain socket names cannot be represented in RFC 7239 syntax
        default           "for=unknown";
    }

    map $http_forwarded $proxy_add_forwarded {

        # If the incoming Forwarded header is syntactically valid, append to it
        "~^(,[ \\t]*)*([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?(;([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?)*([ \\t]*,([ \\t]*([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?(;([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?)*)?)*$" "$http_forwarded, $proxy_forwarded_elem";

        # Otherwise, replace it
        default "$proxy_forwarded_elem";
    }

    upstream nextjs_upstream {
        server nextjs:3000;
    }

    # - /var/cache/nginx sets a directory to store the cached assets
    # - levels=1:2 sets up a two‑level directory hierarchy as file access speed can be reduced when too many files are in a single directory
    # - keys_zone=STATIC:10m defines a shared memory zone for cache keys named “STATIC” and with a size limit of 10MB (which should be more than enough unless you have thousands of files)
    # - inactive=7d is the time that items will remain cached without being accessed (7 days), after which they will be removed
    # - use_temp_path=off tells NGINX to write files directly to the cache directory and avoid unnecessary copying of data to a temporary storage area first
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;

    # server
    server {
        server_name                          _;
        listen                               80 reuseport;
        listen                               [::]:80 reuseport;

        # security headers
        add_header X-XSS-Protection          "1; mode=block" always;
        add_header X-Content-Type-Options    "nosniff" always;
        add_header Referrer-Policy           "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy   "default-src 'self' http: https: ws: wss: data: blob: 'unsafe-inline' 'wasm-unsafe-eval'; frame-ancestors 'self';" always;
        add_header Permissions-Policy        "interest-cohort=()" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

        proxy_http_version 1.1;

        # Proxy headers
        proxy_set_header Host              $host;
        proxy_set_header Upgrade           $http_upgrade;
        proxy_set_header Connection        $connection_upgrade;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header Forwarded         $proxy_add_forwarded;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host  $host;
        proxy_set_header X-Forwarded-Port  $server_port;

        # Proxy timeouts
        proxy_connect_timeout              60s;
        proxy_send_timeout                 60s;
        proxy_read_timeout                 60s;

        # . files
        location ~ /\.(?!well-known) {
            deny all;
        }

        # gzip
        gzip            on;
        gzip_vary       on;
        gzip_proxied    any;
        gzip_comp_level 6;
        gzip_types      text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;

        # # imgproxy paths can contain multiple slashes (e.g. local:///image/file.jpg)
        # merge_slashes off;

        # # imgproxy
        # location /img/ {
        #     proxy_intercept_errors                  on;
        #     proxy_no_cache                          $arg_nocache;
        #     proxy_cache_background_update           off;
        #     proxy_cache_bypass                      $http_upgrade $arg_bypass $arg_debug $arg_nocache;
        #     proxy_cache_lock                        on;
        #     proxy_cache_lock_age                    5s;
        #     proxy_cache_lock_timeout                5s;
        #     proxy_cache_methods                     GET HEAD;
        #     proxy_cache_min_uses                    1;
        #     proxy_cache_revalidate                  on;
        #     proxy_cache_valid                       200 206 6h;
        #     proxy_cache_valid                       any 1m;
        #     proxy_cache_use_stale                   error timeout invalid_header updating
        #                                             http_429 http_500 http_502 http_503 http_504;

        #     # /img/s:320:0/bl:10/q:50/src/cpy.jpg

        #     # s:320:0/bl:10/q:50
        #     set $uri_options "";
        #     if ($request_uri ~* ^/img/(.+)/src/) {
        #         set $uri_options "/$1";
        #     }

        #     # /plain/local:///
        #     set $uri_origin "";
        #     if ($request_uri ~* /src) {
        #         set $uri_origin "/plain/local://";
        #     }

        #     # /cpy3.jpg
        #     set $uri_src "";
        #     if ($request_uri ~* /src(/.*)) {
        #         set $uri_src $1;
        #     }

        #     # /insecure/s:320:0/bl:10/q:50/plain/local:///cpy.jpg
        #     set $final_new_uri "/insecure$uri_options$uri_origin$uri_src";

        #     # debug
        #     add_header Imgproxy-Debug-Cache $upstream_cache_status always;
        #     add_header Imgproxy-Debug-Request-Uri $request_uri always;
        #     add_header Imgproxy-Debug-New-Uri $final_new_uri always;

        #     proxy_cache STATIC;
        #     proxy_pass http://imgproxy_upstream$final_new_uri;
        # }

        location /public/ {
            alias /usr/share/nginx/html/public/;
        }

        # nextjs
        location / {
            proxy_pass http://nextjs_upstream;
        }

    }
}